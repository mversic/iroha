[package]
name = "iroha_core"

edition.workspace = true
version.workspace = true
authors.workspace = true

description.workspace = true
repository.workspace = true
homepage.workspace = true
documentation.workspace = true

license.workspace = true
keywords.workspace = true
categories.workspace = true

[features]
default = ["bridge", "cli", "telemetry"]

# Interoperability with popular blockchain networks (Substrate, Ether, etc.)
bridge = []
# Support lightweight telemetry, including diagnostics
telemetry = []
# Support the included CLI
cli = []
# Support Decentralised Exchange, including functionality for atomic exchange instruction
dex = []
# Support developer-specific telemetry.
# Should not be enabled on production builds.
dev-telemetry = ["telemetry", "iroha_telemetry/dev-telemetry"]
# Support Prometheus metrics. See https://prometheus.io/.
expensive-telemetry = ["iroha_telemetry/metric-instrumentation"]

[badges]
is-it-maintained-issue-resolution = { repository = "https://github.com/hyperledger/iroha" }
is-it-maintained-open-issues = { repository = "https://github.com/hyperledger/iroha" }
maintenance = { status = "actively-developed" }

[dependencies]
iroha_data_model = { workspace = true, features = ["transparent_api"] }
iroha_macro = { workspace = true }
iroha_p2p = { workspace = true }
iroha_logger = { workspace = true }
iroha_crypto = { workspace = true }
iroha_version = { workspace = true }
iroha_config = { workspace = true }
iroha_futures = { workspace = true }
iroha_telemetry = { workspace = true }
iroha_primitives = { workspace = true }
iroha_genesis = { workspace = true }
iroha_wasm_codec = { workspace = true }

async-trait = { workspace = true }
dashmap = { workspace = true }
eyre = { workspace = true }
futures = { workspace = true, features = ["std", "async-await"] }
parity-scale-codec = { workspace = true, features = ["derive"] }
rand = { workspace = true }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
tokio = { workspace = true, features = ["sync", "time", "rt", "io-util", "rt-multi-thread", "macros", "fs"] }
crossbeam-queue = { workspace = true }
thiserror = { workspace = true }
displaydoc = { workspace = true }
wasmtime = { workspace = true }
parking_lot = { workspace = true, features = ["deadlock_detection"] }
derive_more = { workspace = true }
itertools = { workspace = true }

[dev-dependencies]
criterion = { workspace = true }
hex = { workspace = true }
once_cell = { workspace = true }
tempfile = { workspace = true }

byte-unit = "4.0.18"

[[bench]]
name = "validation"
harness = false

[[bench]]
name = "kura"
harness = false

[[bench]]
name = "apply_blocks"
harness = false
path = "benches/apply_blocks/benchmark.rs"

[[bench]]
name = "validate_blocks"
harness = false
path = "benches/validate_blocks/benchmark.rs"

[[example]]
name = "apply_blocks"
harness = false
path = "benches/apply_blocks/oneshot.rs"

[[example]]
name = "validate_blocks"
harness = false
path = "benches/validate_blocks/oneshot.rs"

[package.metadata.cargo-all-features]
denylist = [
"bridge",
"dex",
"schema-endpoint",
"telemetry",
"test-network"
] # TODO: remove `dex` and `bridge` once there's code for them.
skip_optional_dependencies = true
